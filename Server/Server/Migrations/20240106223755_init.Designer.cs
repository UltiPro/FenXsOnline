// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240106223755_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int?>("BootsId")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dead")
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int?>("GlovesId")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int?>("HelmetId")
                        .HasColumnType("int");

                    b.Property<bool>("InGame")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<int>("MagicAttack")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("MaxHealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("MaxMana")
                        .HasColumnType("int");

                    b.Property<int>("MaxStamina")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NecklaceId")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<int?>("RingId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryWeaponId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("BootsId");

                    b.HasIndex("GlovesId");

                    b.HasIndex("HelmetId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NecklaceId");

                    b.HasIndex("RingId");

                    b.HasIndex("SecondaryWeaponId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHeroEquipment", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("HeroId", "Id");

                    b.ToTable("HeroesEquipments");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Armor.DBArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Armors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 5,
                            Armor = 30,
                            HealthPoints = 5,
                            ItemType = 2,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Red Caftan",
                            Price = 20,
                            Profession = 0,
                            SpriteURL = "armorWarrior0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Agility = 10,
                            Armor = 20,
                            HealthPoints = 0,
                            ItemType = 2,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Leather Armor",
                            Price = 20,
                            Profession = 1,
                            SpriteURL = "armorHunter0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            Agility = 5,
                            Armor = 5,
                            HealthPoints = 20,
                            ItemType = 2,
                            Level = 1,
                            MagicArmor = 15,
                            Name = "Wanderer's Coat",
                            Price = 20,
                            Profession = 2,
                            SpriteURL = "armorMage0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 4,
                            Agility = 0,
                            Armor = 10,
                            HealthPoints = 10,
                            ItemType = 2,
                            Level = 1,
                            MagicArmor = 10,
                            Name = "Incomplete Armor",
                            Price = 20,
                            Profession = 3,
                            SpriteURL = "armorPaladin0.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 5,
                            Agility = 0,
                            Armor = 55,
                            HealthPoints = 15,
                            ItemType = 2,
                            Level = 10,
                            MagicArmor = 0,
                            Name = "Wanderer's Chainmail",
                            Price = 50,
                            Profession = 0,
                            SpriteURL = "armorWarrior10.gif",
                            Weight = 10
                        },
                        new
                        {
                            Id = 6,
                            Agility = 25,
                            Armor = 25,
                            HealthPoints = 5,
                            ItemType = 2,
                            Level = 10,
                            MagicArmor = 0,
                            Name = "Tunic Of Agility",
                            Price = 35,
                            Profession = 1,
                            SpriteURL = "armorHunter10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 7,
                            Agility = 5,
                            Armor = 15,
                            HealthPoints = 20,
                            ItemType = 2,
                            Level = 10,
                            MagicArmor = 35,
                            Name = "Novice's Coat",
                            Price = 30,
                            Profession = 2,
                            SpriteURL = "armorMage10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 8,
                            Agility = 0,
                            Armor = 25,
                            HealthPoints = 10,
                            ItemType = 2,
                            Level = 10,
                            MagicArmor = 25,
                            Name = "Steel Breastplate",
                            Price = 55,
                            Profession = 3,
                            SpriteURL = "armorPaladin10.gif",
                            Weight = 15
                        },
                        new
                        {
                            Id = 9,
                            Agility = 5,
                            Armor = 100,
                            HealthPoints = 30,
                            ItemType = 2,
                            Level = 20,
                            MagicArmor = 0,
                            Name = "Reinforced Wanderer's Chainmail",
                            Price = 250,
                            Profession = 0,
                            SpriteURL = "armorWarrior20.gif",
                            Weight = 15
                        },
                        new
                        {
                            Id = 10,
                            Agility = 15,
                            Armor = 65,
                            HealthPoints = 35,
                            ItemType = 2,
                            Level = 20,
                            MagicArmor = 0,
                            Name = "Hunter's Tunic",
                            Price = 150,
                            Profession = 1,
                            SpriteURL = "armorHunter20.gif",
                            Weight = 10
                        },
                        new
                        {
                            Id = 11,
                            Agility = 5,
                            Armor = 30,
                            HealthPoints = 50,
                            ItemType = 2,
                            Level = 20,
                            MagicArmor = 95,
                            Name = "Thinker's Coat",
                            Price = 200,
                            Profession = 2,
                            SpriteURL = "armorMage20.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 12,
                            Agility = 0,
                            Armor = 75,
                            HealthPoints = 50,
                            ItemType = 2,
                            Level = 20,
                            MagicArmor = 75,
                            Name = "Guardian Armor",
                            Price = 350,
                            Profession = 3,
                            SpriteURL = "armorPaladin20.gif",
                            Weight = 20
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Boots.DBBoots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Boots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 5,
                            Armor = 5,
                            HealthPoints = 0,
                            ItemType = 4,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Chainmail Boots",
                            Price = 5,
                            Profession = 0,
                            SpriteURL = "bootsWarrior0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 2,
                            Agility = 5,
                            Armor = 1,
                            HealthPoints = 5,
                            ItemType = 4,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Sheepskin Boots",
                            Price = 1,
                            Profession = 1,
                            SpriteURL = "bootsHunter0.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            Agility = 2,
                            Armor = 1,
                            HealthPoints = 3,
                            ItemType = 4,
                            Level = 1,
                            MagicArmor = 5,
                            Name = "Leather Slippers",
                            Price = 2,
                            Profession = 2,
                            SpriteURL = "bootsMage0.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 4,
                            Agility = 0,
                            Armor = 15,
                            HealthPoints = 0,
                            ItemType = 4,
                            Level = 1,
                            MagicArmor = 5,
                            Name = "Steel Boots",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "bootsPaladin0.gif",
                            Weight = 3
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Consumables.DBConsumables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Consumables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gold = 0,
                            HealthPoints = 10,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Small Health Potion",
                            Price = 20,
                            SpriteURL = "potionHealthSmall.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 2,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Small Stamina Potion",
                            Price = 50,
                            SpriteURL = "potionStaminaSmall.gif",
                            Stamina = 10
                        },
                        new
                        {
                            Id = 3,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 10,
                            Name = "Small Mana Potion",
                            Price = 50,
                            SpriteURL = "potionManaSmall.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 4,
                            Gold = 0,
                            HealthPoints = 30,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Medium Health Potion",
                            Price = 100,
                            SpriteURL = "potionHealthMedium.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 5,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Medium Stamina Potion",
                            Price = 200,
                            SpriteURL = "potionStaminaMedium.gif",
                            Stamina = 30
                        },
                        new
                        {
                            Id = 6,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 30,
                            Name = "Medium Mana Potion",
                            Price = 200,
                            SpriteURL = "potionManaMedium.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 7,
                            Gold = 0,
                            HealthPoints = 100,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Large Health Potion",
                            Price = 1000,
                            SpriteURL = "potionHealthLarge.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 8,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Large Stamina Potion",
                            Price = 2000,
                            SpriteURL = "potionStaminaLarge.gif",
                            Stamina = 100
                        },
                        new
                        {
                            Id = 9,
                            Gold = 0,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 100,
                            Name = "Large Mana Potion",
                            Price = 2000,
                            SpriteURL = "potionManaLarge.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 10,
                            Gold = 0,
                            HealthPoints = 2,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Apple",
                            Price = 3,
                            SpriteURL = "apple.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 11,
                            Gold = 0,
                            HealthPoints = 5,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Meat",
                            Price = 8,
                            SpriteURL = "meat.gif",
                            Stamina = 0
                        },
                        new
                        {
                            Id = 12,
                            Gold = 0,
                            HealthPoints = -10,
                            ItemType = 8,
                            Mana = 5,
                            Name = "Night Mashroom",
                            Price = 5,
                            SpriteURL = "nightMashroom.gif",
                            Stamina = 5
                        },
                        new
                        {
                            Id = 13,
                            Gold = 15,
                            HealthPoints = 0,
                            ItemType = 8,
                            Mana = 0,
                            Name = "Pile Of Coins",
                            Price = 0,
                            SpriteURL = "pileOfCoins.gif",
                            Stamina = 0
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Gloves.DBGloves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gloves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 0,
                            Armor = 10,
                            HealthPoints = 5,
                            ItemType = 5,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Steel Bracelets",
                            Price = 5,
                            Profession = 0,
                            SpriteURL = "glovesWarrior0.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 2,
                            Agility = 5,
                            Armor = 5,
                            HealthPoints = 5,
                            ItemType = 5,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Leather Gloves",
                            Price = 2,
                            Profession = 1,
                            SpriteURL = "glovesHunter0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 3,
                            Agility = 0,
                            Armor = 2,
                            HealthPoints = 5,
                            ItemType = 5,
                            Level = 1,
                            MagicArmor = 8,
                            Name = "Black Gloves",
                            Price = 3,
                            Profession = 2,
                            SpriteURL = "glovesMage0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            Agility = -2,
                            Armor = 10,
                            HealthPoints = 0,
                            ItemType = 5,
                            Level = 1,
                            MagicArmor = 5,
                            Name = "Iron Paws",
                            Price = 5,
                            Profession = 3,
                            SpriteURL = "glovesPaladin0.gif",
                            Weight = 4
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Helmet.DBHelmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Helmets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 0,
                            Armor = 5,
                            HealthPoints = 0,
                            ItemType = 3,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Copper Helmet",
                            Price = 10,
                            Profession = 0,
                            SpriteURL = "helmetWarrior0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 2,
                            Agility = 0,
                            Armor = 1,
                            HealthPoints = 5,
                            ItemType = 3,
                            Level = 1,
                            MagicArmor = 0,
                            Name = "Wanderer's Hat",
                            Price = 2,
                            Profession = 1,
                            SpriteURL = "helmetHunter0.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            Agility = 0,
                            Armor = 1,
                            HealthPoints = 10,
                            ItemType = 3,
                            Level = 1,
                            MagicArmor = 10,
                            Name = "Magician's Hat",
                            Price = 5,
                            Profession = 2,
                            SpriteURL = "helmetMage0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            Agility = 0,
                            Armor = 5,
                            HealthPoints = 0,
                            ItemType = 3,
                            Level = 1,
                            MagicArmor = 10,
                            Name = "Zinc Helmet",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "helmetPaladin0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 5,
                            Agility = -5,
                            Armor = 40,
                            HealthPoints = 15,
                            ItemType = 3,
                            Level = 10,
                            MagicArmor = 0,
                            Name = "Viking Helmet",
                            Price = 30,
                            Profession = 0,
                            SpriteURL = "helmetWarrior10.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 6,
                            Agility = 5,
                            Armor = 10,
                            HealthPoints = 10,
                            ItemType = 3,
                            Level = 10,
                            MagicArmor = 0,
                            Name = "Elf Hat",
                            Price = 15,
                            Profession = 1,
                            SpriteURL = "helmetHunter10.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 7,
                            Agility = 0,
                            Armor = 1,
                            HealthPoints = 30,
                            ItemType = 3,
                            Level = 10,
                            MagicArmor = 10,
                            Name = "Student Cap",
                            Price = 5,
                            Profession = 2,
                            SpriteURL = "helmetMage10.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 8,
                            Agility = 0,
                            Armor = 25,
                            HealthPoints = 5,
                            ItemType = 3,
                            Level = 10,
                            MagicArmor = 15,
                            Name = "Steel Helmet",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "helmetPaladin10.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 9,
                            Agility = 5,
                            Armor = 30,
                            HealthPoints = 15,
                            ItemType = 3,
                            Level = 20,
                            MagicArmor = 0,
                            Name = "Battle Helmet",
                            Price = 100,
                            Profession = 0,
                            SpriteURL = "helmetWarrior20.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 10,
                            Agility = 25,
                            Armor = 10,
                            HealthPoints = 5,
                            ItemType = 3,
                            Level = 20,
                            MagicArmor = 0,
                            Name = "Agility Hood",
                            Price = 40,
                            Profession = 1,
                            SpriteURL = "helmetHunter20.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 11,
                            Agility = 5,
                            Armor = 15,
                            HealthPoints = 15,
                            ItemType = 3,
                            Level = 20,
                            MagicArmor = 15,
                            Name = "Helmet of Versatility",
                            Price = 200,
                            Profession = 2,
                            SpriteURL = "helmetMage20.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 12,
                            Agility = 0,
                            Armor = 30,
                            HealthPoints = 10,
                            ItemType = 3,
                            Level = 20,
                            MagicArmor = 25,
                            Name = "Gilded Helmet",
                            Price = 100,
                            Profession = 3,
                            SpriteURL = "helmetPaladin20.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 13,
                            Agility = 0,
                            Armor = 100,
                            HealthPoints = 0,
                            ItemType = 3,
                            Level = 30,
                            MagicArmor = 0,
                            Name = "Tournament Visor",
                            Price = 250,
                            Profession = 0,
                            SpriteURL = "helmetWarrior30.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 14,
                            Agility = 5,
                            Armor = 65,
                            HealthPoints = 30,
                            ItemType = 3,
                            Level = 30,
                            MagicArmor = 0,
                            Name = "Bear Hat",
                            Price = 175,
                            Profession = 1,
                            SpriteURL = "helmetHunter30.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 15,
                            Agility = 10,
                            Armor = 50,
                            HealthPoints = 40,
                            ItemType = 3,
                            Level = 30,
                            MagicArmor = 50,
                            Name = "Magical Hat Of The Crimson Avenger",
                            Price = 450,
                            Profession = 2,
                            SpriteURL = "helmetMage30.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 16,
                            Agility = 0,
                            Armor = 85,
                            HealthPoints = 35,
                            ItemType = 3,
                            Level = 30,
                            MagicArmor = 45,
                            Name = "Helmet Of The Order",
                            Price = 300,
                            Profession = 3,
                            SpriteURL = "helmetPaladin30.gif",
                            Weight = 5
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Necklace.DBNecklace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Necklaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriticalChance = 5,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 1,
                            Mana = 0,
                            Name = "Father's Necklace",
                            Price = 10,
                            SpriteURL = "necklace0.gif",
                            Stamina = 20,
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            CriticalChance = 0,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 10,
                            Mana = 40,
                            Name = "Necklace of Magic",
                            Price = 20,
                            SpriteURL = "necklace10.gif",
                            Stamina = 0,
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            CriticalChance = 5,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 20,
                            Mana = 10,
                            Name = "Necklace of Fortune",
                            Price = 200,
                            SpriteURL = "necklace20.gif",
                            Stamina = 10,
                            Weight = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Neutral.DBNeutral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Neutrals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ItemType = 9,
                            Name = "Feather",
                            Price = 5,
                            SpriteURL = "feather.gif"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ItemType = 9,
                            Name = "Boar Leather",
                            Price = 25,
                            SpriteURL = "boarLeather.gif"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ItemType = 9,
                            Name = "Boar Tusk",
                            Price = 10,
                            SpriteURL = "boarTusk.gif"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ItemType = 9,
                            Name = "Boar Tail",
                            Price = 5,
                            SpriteURL = "boarTail.gif"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ItemType = 9,
                            Name = "Wolf Tusk",
                            Price = 15,
                            SpriteURL = "wolfTusk.gif"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Strong poison, some craftsmen may be interested in it.",
                            ItemType = 9,
                            Name = "Spider Poison",
                            Price = 50,
                            SpriteURL = "spiderPoison.gif"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Wonder if it can be useful for something?",
                            ItemType = 9,
                            Name = "Powder",
                            Price = 5,
                            SpriteURL = "powder.gif"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Rare expensive stone.",
                            ItemType = 9,
                            Name = "Jasper",
                            Price = 150,
                            SpriteURL = "jasper.gif"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ItemType = 9,
                            Name = "Cloth",
                            Price = 5,
                            SpriteURL = "cloth.gif"
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ItemType = 9,
                            Name = "Wood",
                            Price = 100,
                            SpriteURL = "wood.gif"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Raw material.",
                            ItemType = 9,
                            Name = "Iron Nuggets",
                            Price = 200,
                            SpriteURL = "ironNuggets.gif"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Useful in crafts.",
                            ItemType = 9,
                            Name = "Iron Ingot",
                            Price = 1000,
                            SpriteURL = "ironIngot.gif"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Precious item.",
                            ItemType = 9,
                            Name = "Blue Crystal",
                            Price = 350,
                            SpriteURL = "blueCrystal.gif"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Wonder who it belonged to?",
                            ItemType = 9,
                            Name = "Trinket",
                            Price = 500,
                            SpriteURL = "trinket.gif"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Wonder what's inside?",
                            ItemType = 9,
                            Name = "Shell",
                            Price = 100,
                            SpriteURL = "shell.gif"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Precious find in one of the shells.",
                            ItemType = 9,
                            Name = "Pearl",
                            Price = 2500,
                            SpriteURL = "pearl.gif"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Precious find in one of the shells. Legend has it that the red color of the pearl comes from the blood of the king murdered by his subordinates.",
                            ItemType = 9,
                            Name = "Blood Pearl",
                            Price = 5000,
                            SpriteURL = "bloodPearl.gif"
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.QuestItem.DBQuestItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The alchemist's lost book.",
                            ItemType = 10,
                            Name = "Alchemist's Book",
                            Price = 1,
                            SpriteURL = "alchemistBook.gif"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ItemType = 10,
                            Name = "Crystal",
                            Price = 1,
                            SpriteURL = "crystal.gif"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Will you find its destiny?",
                            ItemType = 10,
                            Name = "Mysterious Key",
                            Price = 1,
                            SpriteURL = "key0.gif"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Allows you to enter the catacombs.",
                            ItemType = 10,
                            Name = "Key To Catacombs",
                            Price = 1,
                            SpriteURL = "key1.gif"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The healer's lost necklace.",
                            ItemType = 10,
                            Name = "Healer's Necklace",
                            Price = 1,
                            SpriteURL = "healerNecklace.gif"
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Ring.DBRing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriticalChance = 0,
                            HealthPoints = 100,
                            ItemType = 7,
                            Level = 1,
                            Mana = 10,
                            Name = "Father's Ring",
                            Price = 5,
                            SpriteURL = "ring0.gif",
                            Stamina = 5,
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            CriticalChance = 0,
                            HealthPoints = 200,
                            ItemType = 7,
                            Level = 10,
                            Mana = 0,
                            Name = "Health Ring",
                            Price = 15,
                            SpriteURL = "ring10.gif",
                            Stamina = 10,
                            Weight = 2
                        },
                        new
                        {
                            Id = 3,
                            CriticalChance = 10,
                            HealthPoints = 50,
                            ItemType = 7,
                            Level = 20,
                            Mana = 0,
                            Name = "Critical Ring",
                            Price = 40,
                            SpriteURL = "ring20.gif",
                            Stamina = 0,
                            Weight = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<int>("MagicAttack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SecondaryWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 20,
                            Attack = 0,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Round Wooden Shield",
                            Price = 10,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Armor = 0,
                            Attack = 5,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Arrow",
                            Price = 1,
                            Profession = 1,
                            SpriteURL = "secondaryHunter0.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            Armor = 0,
                            Attack = 0,
                            CriticalChance = 3,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "School Spell Book",
                            Price = 5,
                            Profession = 2,
                            SpriteURL = "secondaryMage0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            Armor = 10,
                            Attack = 0,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 5,
                            MagicAttack = 0,
                            Name = "Beginner's Shield",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 5,
                            Armor = 40,
                            Attack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Knight's Shield",
                            Price = 20,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 6,
                            Armor = 0,
                            Attack = 10,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Fire Arrow",
                            Price = 2,
                            Profession = 1,
                            SpriteURL = "secondaryHunter10.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 7,
                            Armor = 0,
                            Attack = 0,
                            CriticalChance = 7,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAttack = 5,
                            Name = "Book Of Spells",
                            Price = 10,
                            Profession = 2,
                            SpriteURL = "secondaryMage10.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 8,
                            Armor = 15,
                            Attack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 15,
                            MagicAttack = 0,
                            Name = "Friar's Shield",
                            Price = 25,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 9,
                            Armor = 65,
                            Attack = 0,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Shield Of The Damned",
                            Price = 50,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior20.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 10,
                            Armor = 0,
                            Attack = 25,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Poisoned Arrow",
                            Price = 20,
                            Profession = 1,
                            SpriteURL = "secondaryHunter20.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 11,
                            Armor = 0,
                            Attack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAttack = 50,
                            Name = "The Sorcerer's Book",
                            Price = 100,
                            Profession = 2,
                            SpriteURL = "secondaryMage20.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 12,
                            Armor = 25,
                            Attack = 0,
                            CriticalChance = 3,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 25,
                            MagicAttack = 0,
                            Name = "Shield Of The Order",
                            Price = 75,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin20.gif",
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Weapon.DBWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicAttack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attack = 20,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAttack = 0,
                            Name = "Beginner's Sword",
                            Price = 10,
                            Profession = 0,
                            SpriteURL = "primaryWarrior0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Attack = 10,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAttack = 0,
                            Name = "Slingshot",
                            Price = 10,
                            Profession = 1,
                            SpriteURL = "primaryHunter0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            Attack = 0,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAttack = 15,
                            Name = "Beginner's Staff",
                            Price = 10,
                            Profession = 2,
                            SpriteURL = "primaryMage0.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 4,
                            Attack = 15,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAttack = 5,
                            Name = "Blunt Sword",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "primaryPaladin0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 5,
                            Attack = 40,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 10,
                            MagicAttack = 0,
                            Name = "Sword Of Glory",
                            Price = 50,
                            Profession = 0,
                            SpriteURL = "primaryWarrior10.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 6,
                            Attack = 25,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 10,
                            MagicAttack = 0,
                            Name = "Recurve Bow",
                            Price = 50,
                            Profession = 1,
                            SpriteURL = "primaryHunter10.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 7,
                            Attack = 0,
                            CriticalChance = 2,
                            ItemType = 0,
                            Level = 10,
                            MagicAttack = 30,
                            Name = "Staff of Serpents",
                            Price = 50,
                            Profession = 2,
                            SpriteURL = "primaryMage10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 8,
                            Attack = 30,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 10,
                            MagicAttack = 15,
                            Name = "Broad sword",
                            Price = 50,
                            Profession = 3,
                            SpriteURL = "primaryPaladin10.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 9,
                            Attack = 80,
                            CriticalChance = 2,
                            ItemType = 0,
                            Level = 20,
                            MagicAttack = 0,
                            Name = "Victors' Saber",
                            Price = 150,
                            Profession = 0,
                            SpriteURL = "primaryWarrior20.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 10,
                            Attack = 55,
                            CriticalChance = 10,
                            ItemType = 0,
                            Level = 20,
                            MagicAttack = 0,
                            Name = "Orc Bow",
                            Price = 150,
                            Profession = 1,
                            SpriteURL = "primaryHunter20.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 11,
                            Attack = 0,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 20,
                            MagicAttack = 60,
                            Name = "Staff of the Woods",
                            Price = 150,
                            Profession = 2,
                            SpriteURL = "primaryMage20.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 12,
                            Attack = 70,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 20,
                            MagicAttack = 5,
                            Name = "Upgraded Broad sword",
                            Price = 150,
                            Profession = 3,
                            SpriteURL = "primaryPaladin20.gif",
                            Weight = 9
                        },
                        new
                        {
                            Id = 13,
                            Attack = 120,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 30,
                            MagicAttack = 0,
                            Name = "Sword Of Darkness",
                            Price = 350,
                            Profession = 0,
                            SpriteURL = "primaryWarrior30.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 14,
                            Attack = 70,
                            CriticalChance = 15,
                            ItemType = 0,
                            Level = 30,
                            MagicAttack = 0,
                            Name = "Bow Of Darkness",
                            Price = 350,
                            Profession = 1,
                            SpriteURL = "primaryHunter30.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 15,
                            Attack = 0,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 30,
                            MagicAttack = 90,
                            Name = "Staff of the Order",
                            Price = 350,
                            Profession = 2,
                            SpriteURL = "primaryMage30.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 16,
                            Attack = 110,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 30,
                            MagicAttack = 40,
                            Name = "Sword of the Order",
                            Price = 350,
                            Profession = 3,
                            SpriteURL = "primaryPaladin30.gif",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Map.DBMapItem", b =>
                {
                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Available")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("MapId", "X", "Y");

                    b.ToTable("MapItems");

                    b.HasData(
                        new
                        {
                            MapId = 1,
                            X = 16,
                            Y = 94,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8318),
                            ItemId = 10,
                            ItemType = 8
                        },
                        new
                        {
                            MapId = 1,
                            X = 15,
                            Y = 69,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8367),
                            ItemId = 10,
                            ItemType = 8
                        },
                        new
                        {
                            MapId = 1,
                            X = 3,
                            Y = 49,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8370),
                            ItemId = 10,
                            ItemType = 8
                        },
                        new
                        {
                            MapId = 1,
                            X = 55,
                            Y = 43,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8372),
                            ItemId = 10,
                            ItemType = 8
                        },
                        new
                        {
                            MapId = 1,
                            X = 56,
                            Y = 71,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8373),
                            ItemId = 5,
                            ItemType = 10
                        },
                        new
                        {
                            MapId = 2,
                            X = 20,
                            Y = 12,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8430),
                            ItemId = 12,
                            ItemType = 8
                        },
                        new
                        {
                            MapId = 2,
                            X = 1,
                            Y = 2,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8433),
                            ItemId = 12,
                            ItemType = 8
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Map.DBMapMob", b =>
                {
                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.Property<DateTime>("Available")
                        .HasColumnType("datetime2");

                    b.Property<int>("MobId")
                        .HasColumnType("int");

                    b.HasKey("MapId", "X", "Y");

                    b.ToTable("MapMobs");

                    b.HasData(
                        new
                        {
                            MapId = 1,
                            X = 12,
                            Y = 88,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8595),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 16,
                            Y = 89,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8599),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 19,
                            Y = 83,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8601),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 5,
                            Y = 86,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8602),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 26,
                            Y = 91,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8604),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 29,
                            Y = 94,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8605),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 9,
                            Y = 66,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8606),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 1,
                            Y = 43,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8608),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 3,
                            Y = 39,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8609),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 6,
                            Y = 46,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8611),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 1,
                            Y = 50,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8612),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 6,
                            Y = 51,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8614),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 1,
                            Y = 61,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8615),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 40,
                            Y = 93,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8616),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 40,
                            Y = 89,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8618),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 57,
                            Y = 94,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8619),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 54,
                            Y = 92,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8620),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 53,
                            Y = 94,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8650),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 47,
                            Y = 92,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8652),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 48,
                            Y = 88,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8653),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 42,
                            Y = 73,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8655),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 47,
                            Y = 73,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8656),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 51,
                            Y = 75,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8658),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 58,
                            Y = 67,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8659),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 53,
                            Y = 65,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8660),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 59,
                            Y = 65,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8662),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 61,
                            Y = 62,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8663),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 58,
                            Y = 63,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8664),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 55,
                            Y = 63,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8666),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 52,
                            Y = 60,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8667),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 57,
                            Y = 61,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8669),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 59,
                            Y = 61,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8670),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 61,
                            Y = 60,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8671),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 62,
                            Y = 57,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8673),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 59,
                            Y = 58,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8674),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 59,
                            Y = 53,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8675),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 59,
                            Y = 27,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8677),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 55,
                            Y = 25,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8678),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 53,
                            Y = 26,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8679),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 62,
                            Y = 20,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8681),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 55,
                            Y = 19,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8682),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 53,
                            Y = 12,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8683),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 55,
                            Y = 13,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8685),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 1,
                            X = 57,
                            Y = 9,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8686),
                            MobId = 1
                        },
                        new
                        {
                            MapId = 2,
                            X = 15,
                            Y = 25,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8752),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 6,
                            Y = 22,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8754),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 2,
                            Y = 21,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8756),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 4,
                            Y = 18,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8757),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 7,
                            Y = 17,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8759),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 9,
                            Y = 20,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8760),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 23,
                            Y = 24,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8762),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 24,
                            Y = 22,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8763),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 23,
                            Y = 19,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8766),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 22,
                            Y = 14,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8767),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 17,
                            Y = 12,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8768),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 16,
                            Y = 19,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8770),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 24,
                            Y = 10,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8771),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 22,
                            Y = 7,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8772),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 27,
                            Y = 9,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8774),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 17,
                            Y = 5,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8775),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 19,
                            Y = 8,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8776),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 13,
                            Y = 4,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8778),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 8,
                            Y = 6,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8779),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 7,
                            Y = 11,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8781),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 4,
                            Y = 8,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8782),
                            MobId = 2
                        },
                        new
                        {
                            MapId = 2,
                            X = 2,
                            Y = 9,
                            Available = new DateTime(2024, 1, 6, 23, 37, 54, 922, DateTimeKind.Local).AddTicks(8783),
                            MobId = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Mob.DBMob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("DropChance")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<int>("MagicAttack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpriteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agility = 15,
                            Armor = 0,
                            Attack = 5,
                            CriticalChance = 0,
                            DropChance = 50,
                            HealthPoints = 100,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Rabbit",
                            SpriteUrl = "rabbit.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            Agility = 5,
                            Armor = 0,
                            Attack = 10,
                            CriticalChance = 5,
                            DropChance = 25,
                            HealthPoints = 100,
                            Level = 5,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Spider",
                            SpriteUrl = "spider.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            Agility = 10,
                            Armor = 0,
                            Attack = 15,
                            CriticalChance = 20,
                            DropChance = 25,
                            HealthPoints = 150,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Wolf",
                            SpriteUrl = "wolf.gif",
                            Weight = 10
                        },
                        new
                        {
                            Id = 4,
                            Agility = 10,
                            Armor = 10,
                            Attack = 25,
                            CriticalChance = 20,
                            DropChance = 25,
                            HealthPoints = 200,
                            Level = 15,
                            MagicArmor = 0,
                            MagicAttack = 0,
                            Name = "Boar",
                            SpriteUrl = "boar.gif",
                            Weight = 20
                        },
                        new
                        {
                            Id = 5,
                            Agility = 10,
                            Armor = 50,
                            Attack = 25,
                            CriticalChance = 15,
                            DropChance = 15,
                            HealthPoints = 350,
                            Level = 20,
                            MagicArmor = 100,
                            MagicAttack = 25,
                            Name = "Apparition",
                            SpriteUrl = "apparition.gif",
                            Weight = 35
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Mob.DBMobDrop", b =>
                {
                    b.Property<int>("MobId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("MobId", "ItemType", "ItemId");

                    b.ToTable("MobsDrop");

                    b.HasData(
                        new
                        {
                            MobId = 1,
                            ItemType = 8,
                            ItemId = 11
                        },
                        new
                        {
                            MobId = 2,
                            ItemType = 9,
                            ItemId = 6
                        },
                        new
                        {
                            MobId = 3,
                            ItemType = 9,
                            ItemId = 5
                        },
                        new
                        {
                            MobId = 4,
                            ItemType = 9,
                            ItemId = 2
                        },
                        new
                        {
                            MobId = 4,
                            ItemType = 9,
                            ItemId = 3
                        },
                        new
                        {
                            MobId = 4,
                            ItemType = 9,
                            ItemId = 4
                        },
                        new
                        {
                            MobId = 4,
                            ItemType = 8,
                            ItemId = 11
                        },
                        new
                        {
                            MobId = 5,
                            ItemType = 9,
                            ItemId = 14
                        },
                        new
                        {
                            MobId = 5,
                            ItemType = 9,
                            ItemId = 7
                        },
                        new
                        {
                            MobId = 5,
                            ItemType = 9,
                            ItemId = 9
                        },
                        new
                        {
                            MobId = 5,
                            ItemType = 8,
                            ItemId = 3
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Npc.DBNpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsHealer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrader")
                        .HasColumnType("bit");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePercent")
                        .HasColumnType("float");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Npcs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsHealer = true,
                            IsTrader = true,
                            MapId = 1,
                            Name = "Adelaide",
                            PricePercent = 0.75,
                            SpriteURL = "adelaide.gif",
                            X = 36,
                            Y = 49
                        },
                        new
                        {
                            Id = 2,
                            IsHealer = false,
                            IsTrader = true,
                            MapId = 1,
                            Name = "Eldrik",
                            PricePercent = 0.84999999999999998,
                            SpriteURL = "eldrik.gif",
                            X = 19,
                            Y = 39
                        },
                        new
                        {
                            Id = 3,
                            IsHealer = false,
                            IsTrader = true,
                            MapId = 1,
                            Name = "Gustaf",
                            PricePercent = 0.80000000000000004,
                            SpriteURL = "gustaf.gif",
                            X = 14,
                            Y = 13
                        },
                        new
                        {
                            Id = 4,
                            IsHealer = false,
                            IsTrader = true,
                            MapId = 1,
                            Name = "Franko",
                            PricePercent = 0.84999999999999998,
                            SpriteURL = "franko.gif",
                            X = 56,
                            Y = 36
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Npc.DBNpcShopItem", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("NpcId", "Id");

                    b.ToTable("NpcsItem");

                    b.HasData(
                        new
                        {
                            NpcId = 1,
                            Id = 1,
                            ItemId = 1,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 7,
                            ItemId = 2,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 13,
                            ItemId = 3,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 2,
                            ItemId = 4,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 8,
                            ItemId = 5,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 14,
                            ItemId = 6,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 3,
                            ItemId = 7,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 9,
                            ItemId = 8,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 1,
                            Id = 15,
                            ItemId = 9,
                            ItemType = 8
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 1,
                            ItemId = 1,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 7,
                            ItemId = 2,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 13,
                            ItemId = 3,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 19,
                            ItemId = 4,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 2,
                            ItemId = 5,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 8,
                            ItemId = 6,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 14,
                            ItemId = 7,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 20,
                            ItemId = 8,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 3,
                            ItemId = 9,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 9,
                            ItemId = 10,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 15,
                            ItemId = 11,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 21,
                            ItemId = 12,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 4,
                            ItemId = 13,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 10,
                            ItemId = 14,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 16,
                            ItemId = 15,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 22,
                            ItemId = 16,
                            ItemType = 0
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 25,
                            ItemId = 1,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 31,
                            ItemId = 2,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 37,
                            ItemId = 3,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 43,
                            ItemId = 4,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 26,
                            ItemId = 5,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 32,
                            ItemId = 6,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 38,
                            ItemId = 7,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 44,
                            ItemId = 8,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 27,
                            ItemId = 9,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 33,
                            ItemId = 10,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 39,
                            ItemId = 11,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 2,
                            Id = 45,
                            ItemId = 12,
                            ItemType = 1
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 1,
                            ItemId = 1,
                            ItemType = 7
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 2,
                            ItemId = 2,
                            ItemType = 7
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 3,
                            ItemId = 3,
                            ItemType = 7
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 7,
                            ItemId = 1,
                            ItemType = 6
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 8,
                            ItemId = 2,
                            ItemType = 6
                        },
                        new
                        {
                            NpcId = 3,
                            Id = 9,
                            ItemId = 3,
                            ItemType = 6
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 19,
                            ItemId = 1,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 20,
                            ItemId = 2,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 21,
                            ItemId = 3,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 22,
                            ItemId = 4,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 25,
                            ItemId = 5,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 26,
                            ItemId = 6,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 27,
                            ItemId = 7,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 28,
                            ItemId = 8,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 31,
                            ItemId = 9,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 32,
                            ItemId = 10,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 33,
                            ItemId = 11,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 34,
                            ItemId = 12,
                            ItemType = 2
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 1,
                            ItemId = 1,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 2,
                            ItemId = 2,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 3,
                            ItemId = 3,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 4,
                            ItemId = 4,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 7,
                            ItemId = 5,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 8,
                            ItemId = 6,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 9,
                            ItemId = 7,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 10,
                            ItemId = 8,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 13,
                            ItemId = 9,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 14,
                            ItemId = 10,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 15,
                            ItemId = 11,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 16,
                            ItemId = 12,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 5,
                            ItemId = 13,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 6,
                            ItemId = 14,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 11,
                            ItemId = 15,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 12,
                            ItemId = 16,
                            ItemType = 3
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 43,
                            ItemId = 1,
                            ItemType = 4
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 44,
                            ItemId = 2,
                            ItemType = 4
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 45,
                            ItemId = 3,
                            ItemType = 4
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 46,
                            ItemId = 4,
                            ItemType = 4
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 37,
                            ItemId = 1,
                            ItemType = 5
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 38,
                            ItemId = 2,
                            ItemType = 5
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 39,
                            ItemId = 3,
                            ItemType = 5
                        },
                        new
                        {
                            NpcId = 4,
                            Id = 40,
                            ItemId = 4,
                            ItemType = 5
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBHeroQuest", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("QuestId")
                        .HasColumnType("int");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.HasKey("HeroId", "QuestId");

                    b.HasIndex("QuestId");

                    b.ToTable("HeroesQuests");
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("NpcMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gold = 100,
                            Level = 1,
                            NpcId = 1,
                            NpcMessage = "I lost my necklace somewhere around here, could you find it and bring it back to me please?",
                            Title = "The healer's lost necklace."
                        },
                        new
                        {
                            Id = 2,
                            Gold = 300,
                            Level = 3,
                            NpcId = 2,
                            NpcMessage = "There are too many rabbits in the area, they are destroying crops, can you take care of it?",
                            Title = "Rabbit plague."
                        },
                        new
                        {
                            Id = 3,
                            Gold = 300,
                            Level = 5,
                            NpcId = 4,
                            NpcMessage = "There are too many spiders in the near cave, they are so scary, can you take care of it?",
                            Title = "Spider plague."
                        },
                        new
                        {
                            Id = 4,
                            Gold = 500,
                            Level = 7,
                            NpcId = 1,
                            NpcMessage = "I need 3 apples for a delicious apple cake, could you deliver them to me?",
                            Title = "Apple pie."
                        },
                        new
                        {
                            Id = 5,
                            Gold = 500,
                            Level = 9,
                            NpcId = 3,
                            NpcMessage = "I would like to examine mushrooms from a nearby cave, could you provide them to me?",
                            Title = "Mysterious mushrooms."
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuestReward", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("QuestId", "ItemType", "ItemId");

                    b.ToTable("QuestRewards");

                    b.HasData(
                        new
                        {
                            QuestId = 1,
                            ItemType = 8,
                            ItemId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            QuestId = 4,
                            ItemType = 9,
                            ItemId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            QuestId = 5,
                            ItemType = 9,
                            ItemId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            QuestId = 5,
                            ItemType = 9,
                            ItemId = 11,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuestStage", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemType")
                        .HasColumnType("int");

                    b.Property<bool>("Kill")
                        .HasColumnType("bit");

                    b.Property<int?>("MobId")
                        .HasColumnType("int");

                    b.Property<string>("NpcAnswear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("NpcMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Talk")
                        .HasColumnType("bit");

                    b.HasKey("QuestId", "Stage");

                    b.ToTable("QuestStages");

                    b.HasData(
                        new
                        {
                            QuestId = 1,
                            Stage = 1,
                            Description = "Find the healer's necklace and bring it to her.",
                            ItemId = 5,
                            ItemType = 10,
                            Kill = false,
                            NpcAnswear = "Thank you very much, here is your reward.",
                            NpcId = 1,
                            NpcMessage = "I found your necklace.",
                            Quantity = 1,
                            Talk = true
                        },
                        new
                        {
                            QuestId = 2,
                            Stage = 1,
                            Description = "Kill 30 rabbits.",
                            Kill = true,
                            MobId = 1,
                            Quantity = 30,
                            Talk = false
                        },
                        new
                        {
                            QuestId = 2,
                            Stage = 2,
                            Description = "Tell Eldrik that you have killed enough rabbits.",
                            Kill = false,
                            NpcAnswear = "Thank you very much, here is your reward.",
                            NpcId = 2,
                            NpcMessage = "I killed rabbits.",
                            Talk = true
                        },
                        new
                        {
                            QuestId = 3,
                            Stage = 1,
                            Description = "Kill 30 spiders.",
                            Kill = true,
                            MobId = 2,
                            Quantity = 30,
                            Talk = false
                        },
                        new
                        {
                            QuestId = 3,
                            Stage = 2,
                            Description = "Tell Franko that you have killed enough spiders.",
                            Kill = false,
                            NpcAnswear = "Thank you very much, here is your reward.",
                            NpcId = 4,
                            NpcMessage = "I killed spiders.",
                            Talk = true
                        },
                        new
                        {
                            QuestId = 4,
                            Stage = 1,
                            Description = "Bring 3 apples for cake to Adelaide.",
                            ItemId = 10,
                            ItemType = 8,
                            Kill = false,
                            NpcAnswear = "Thank you very much, here is your reward.",
                            NpcId = 1,
                            NpcMessage = "I brought you three apples.",
                            Quantity = 3,
                            Talk = true
                        },
                        new
                        {
                            QuestId = 5,
                            Stage = 1,
                            Description = "Bring 5 night mashroom to Gustaf.",
                            ItemId = 12,
                            ItemType = 8,
                            Kill = false,
                            NpcAnswear = "Thank you very much, here is your reward.",
                            NpcId = 3,
                            NpcMessage = "I brought you five night mashrooms.",
                            Quantity = 5,
                            Talk = true
                        });
                });

            modelBuilder.Entity("Classes.Models.User.DBUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9696b9d3-aafc-4412-b98e-54defa081bd9",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "de4b723b-d2ad-4361-a258-97f95a81b2d9",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "358269f1-1849-47b8-beae-3c53ff5cd0ea",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHero", b =>
                {
                    b.HasOne("Classes.Models.Game.Item.Armor.DBArmor", "DBArmor")
                        .WithMany("Heroes")
                        .HasForeignKey("ArmorId");

                    b.HasOne("Classes.Models.Game.Item.Boots.DBBoots", "DBBoots")
                        .WithMany("Heroes")
                        .HasForeignKey("BootsId");

                    b.HasOne("Classes.Models.Game.Item.Gloves.DBGloves", "DBGloves")
                        .WithMany("Heroes")
                        .HasForeignKey("GlovesId");

                    b.HasOne("Classes.Models.Game.Item.Helmet.DBHelmet", "DBHelmet")
                        .WithMany("Heroes")
                        .HasForeignKey("HelmetId");

                    b.HasOne("Classes.Models.Game.Item.Necklace.DBNecklace", "DBNecklace")
                        .WithMany("Heroes")
                        .HasForeignKey("NecklaceId");

                    b.HasOne("Classes.Models.Game.Item.Ring.DBRing", "DBRing")
                        .WithMany("Heroes")
                        .HasForeignKey("RingId");

                    b.HasOne("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", "DBSecondaryWeapon")
                        .WithMany("Heroes")
                        .HasForeignKey("SecondaryWeaponId");

                    b.HasOne("Classes.Models.User.DBUser", "DBUser")
                        .WithMany("Heroes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Classes.Models.Game.Item.Weapon.DBWeapon", "DBWeapon")
                        .WithMany("Heroes")
                        .HasForeignKey("WeaponId");

                    b.Navigation("DBArmor");

                    b.Navigation("DBBoots");

                    b.Navigation("DBGloves");

                    b.Navigation("DBHelmet");

                    b.Navigation("DBNecklace");

                    b.Navigation("DBRing");

                    b.Navigation("DBSecondaryWeapon");

                    b.Navigation("DBUser");

                    b.Navigation("DBWeapon");
                });

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHeroEquipment", b =>
                {
                    b.HasOne("Classes.Models.Game.Hero.DBHero", "DBHero")
                        .WithMany("HeroEquipment")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBHero");
                });

            modelBuilder.Entity("Classes.Models.Game.Mob.DBMobDrop", b =>
                {
                    b.HasOne("Classes.Models.Game.Mob.DBMob", "DBMob")
                        .WithMany("DropItems")
                        .HasForeignKey("MobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBMob");
                });

            modelBuilder.Entity("Classes.Models.Game.Npc.DBNpcShopItem", b =>
                {
                    b.HasOne("Classes.Models.Game.Npc.DBNpc", "DBNpc")
                        .WithMany("ShopItems")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBNpc");
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBHeroQuest", b =>
                {
                    b.HasOne("Classes.Models.Game.Hero.DBHero", "DBHero")
                        .WithMany("HeroQuest")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Classes.Models.Game.Quest.DBQuest", "DBQuest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBHero");

                    b.Navigation("DBQuest");
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuestReward", b =>
                {
                    b.HasOne("Classes.Models.Game.Quest.DBQuest", "DBQuest")
                        .WithMany("Rewards")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBQuest");
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuestStage", b =>
                {
                    b.HasOne("Classes.Models.Game.Quest.DBQuest", "DBQuest")
                        .WithMany("Stages")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DBQuest");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHero", b =>
                {
                    b.Navigation("HeroEquipment");

                    b.Navigation("HeroQuest");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Armor.DBArmor", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Boots.DBBoots", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Gloves.DBGloves", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Helmet.DBHelmet", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Necklace.DBNecklace", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Ring.DBRing", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Weapon.DBWeapon", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Mob.DBMob", b =>
                {
                    b.Navigation("DropItems");
                });

            modelBuilder.Entity("Classes.Models.Game.Npc.DBNpc", b =>
                {
                    b.Navigation("ShopItems");
                });

            modelBuilder.Entity("Classes.Models.Game.Quest.DBQuest", b =>
                {
                    b.Navigation("Rewards");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("Classes.Models.User.DBUser", b =>
                {
                    b.Navigation("Heroes");
                });
#pragma warning restore 612, 618
        }
    }
}
