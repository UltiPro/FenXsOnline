// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231119180517_CorrectionsAndWeapons")]
    partial class CorrectionsAndWeapons
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<int>("Atack")
                        .HasColumnType("int");

                    b.Property<int?>("BootsId")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int?>("GlovesId")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int?>("HelmetId")
                        .HasColumnType("int");

                    b.Property<bool>("InGame")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDead")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<int>("MagicAtack")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("MaxHealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("MaxMana")
                        .HasColumnType("int");

                    b.Property<int>("MaxStamina")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NecklaceId")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<int?>("RingId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryWeaponId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("BootsId");

                    b.HasIndex("GlovesId");

                    b.HasIndex("HelmetId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NecklaceId");

                    b.HasIndex("RingId");

                    b.HasIndex("SecondaryWeaponId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Armor.DBArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Boots.DBBoots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Boots");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Gloves.DBGloves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gloves");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Helmet.DBHelmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Helmets");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Necklace.DBNecklace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Necklaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriticalChance = 5,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 1,
                            Mana = 0,
                            Name = "Father's Necklace",
                            Price = 10,
                            SpriteURL = "necklace0.gif",
                            Stamina = 20,
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            CriticalChance = 0,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 10,
                            Mana = 40,
                            Name = "Necklace of Magic",
                            Price = 20,
                            SpriteURL = "necklace10.gif",
                            Stamina = 0,
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            CriticalChance = 5,
                            HealthPoints = 0,
                            ItemType = 6,
                            Level = 20,
                            Mana = 10,
                            Name = "Necklace of Fortune",
                            Price = 200,
                            SpriteURL = "necklace20.gif",
                            Stamina = 10,
                            Weight = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Ring.DBRing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stamina")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriticalChance = 0,
                            HealthPoints = 100,
                            ItemType = 7,
                            Level = 1,
                            Mana = 10,
                            Name = "Father's Ring",
                            Price = 5,
                            SpriteURL = "ring0.gif",
                            Stamina = 5,
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            CriticalChance = 0,
                            HealthPoints = 200,
                            ItemType = 7,
                            Level = 10,
                            Mana = 0,
                            Name = "Health Ring",
                            Price = 15,
                            SpriteURL = "ring10.gif",
                            Stamina = 10,
                            Weight = 2
                        },
                        new
                        {
                            Id = 3,
                            CriticalChance = 10,
                            HealthPoints = 50,
                            ItemType = 7,
                            Level = 20,
                            Mana = 0,
                            Name = "Critical Ring",
                            Price = 40,
                            SpriteURL = "ring20.gif",
                            Stamina = 0,
                            Weight = 2
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Atack")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicArmor")
                        .HasColumnType("int");

                    b.Property<int>("MagicAtack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SecondaryWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Armor = 20,
                            Atack = 0,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Round Wooden Shield",
                            Price = 10,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Armor = 0,
                            Atack = 5,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Arrow",
                            Price = 1,
                            Profession = 1,
                            SpriteURL = "secondaryHunter0.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            Armor = 0,
                            Atack = 0,
                            CriticalChance = 3,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "School Spell Book",
                            Price = 5,
                            Profession = 2,
                            SpriteURL = "secondaryMage0.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            Armor = 10,
                            Atack = 0,
                            CriticalChance = 0,
                            ItemType = 1,
                            Level = 1,
                            MagicArmor = 5,
                            MagicAtack = 0,
                            Name = "Beginner's Shield",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 5,
                            Armor = 40,
                            Atack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Knight's Shield",
                            Price = 20,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 6,
                            Armor = 0,
                            Atack = 10,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Fire Arrow",
                            Price = 2,
                            Profession = 1,
                            SpriteURL = "secondaryHunter10.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 7,
                            Armor = 0,
                            Atack = 0,
                            CriticalChance = 7,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 0,
                            MagicAtack = 5,
                            Name = "Book Of Spells",
                            Price = 10,
                            Profession = 2,
                            SpriteURL = "secondaryMage10.gif",
                            Weight = 2
                        },
                        new
                        {
                            Id = 8,
                            Armor = 15,
                            Atack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 10,
                            MagicArmor = 15,
                            MagicAtack = 0,
                            Name = "Friar's Shield",
                            Price = 25,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 9,
                            Armor = 65,
                            Atack = 0,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Shield Of The Damned",
                            Price = 50,
                            Profession = 0,
                            SpriteURL = "secondaryWarrior20.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 10,
                            Armor = 0,
                            Atack = 25,
                            CriticalChance = 5,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAtack = 0,
                            Name = "Poisoned Arrow",
                            Price = 20,
                            Profession = 1,
                            SpriteURL = "secondaryHunter20.gif",
                            Weight = 1
                        },
                        new
                        {
                            Id = 11,
                            Armor = 0,
                            Atack = 0,
                            CriticalChance = 2,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 0,
                            MagicAtack = 50,
                            Name = "The Sorcerer's Book",
                            Price = 100,
                            Profession = 2,
                            SpriteURL = "secondaryMage20.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 12,
                            Armor = 25,
                            Atack = 0,
                            CriticalChance = 3,
                            ItemType = 1,
                            Level = 20,
                            MagicArmor = 25,
                            MagicAtack = 0,
                            Name = "Shield Of The Order",
                            Price = 75,
                            Profession = 3,
                            SpriteURL = "secondaryPaladin20.gif",
                            Weight = 6
                        });
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Weapon.DBWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Atack")
                        .HasColumnType("int");

                    b.Property<int>("CriticalChance")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicAtack")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Atack = 20,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAtack = 0,
                            Name = "Beginner's Sword",
                            Price = 10,
                            Profession = 0,
                            SpriteURL = "primaryWarrior0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            Atack = 10,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAtack = 0,
                            Name = "Slingshot",
                            Price = 10,
                            Profession = 1,
                            SpriteURL = "primaryHunter0.gif",
                            Weight = 3
                        },
                        new
                        {
                            Id = 3,
                            Atack = 0,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAtack = 15,
                            Name = "Beginner's Staff",
                            Price = 10,
                            Profession = 2,
                            SpriteURL = "primaryMage0.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 4,
                            Atack = 15,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 1,
                            MagicAtack = 5,
                            Name = "Blunt Sword",
                            Price = 10,
                            Profession = 3,
                            SpriteURL = "primaryPaladin0.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 5,
                            Atack = 40,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 10,
                            MagicAtack = 0,
                            Name = "Victors' Saber",
                            Price = 50,
                            Profession = 0,
                            SpriteURL = "primaryWarrior10.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 6,
                            Atack = 25,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 10,
                            MagicAtack = 0,
                            Name = "Recurve Bow",
                            Price = 50,
                            Profession = 1,
                            SpriteURL = "primaryHunter10.gif",
                            Weight = 4
                        },
                        new
                        {
                            Id = 7,
                            Atack = 0,
                            CriticalChance = 2,
                            ItemType = 0,
                            Level = 10,
                            MagicAtack = 30,
                            Name = "Staff of Serpents",
                            Price = 50,
                            Profession = 2,
                            SpriteURL = "primaryMage10.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 8,
                            Atack = 30,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 10,
                            MagicAtack = 15,
                            Name = "Broad sword",
                            Price = 50,
                            Profession = 3,
                            SpriteURL = "primaryPaladin10.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 9,
                            Atack = 80,
                            CriticalChance = 2,
                            ItemType = 0,
                            Level = 20,
                            MagicAtack = 0,
                            Name = "Obsidian Sword",
                            Price = 150,
                            Profession = 0,
                            SpriteURL = "primaryWarrior20.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 10,
                            Atack = 55,
                            CriticalChance = 10,
                            ItemType = 0,
                            Level = 20,
                            MagicAtack = 0,
                            Name = "Orc Bow",
                            Price = 150,
                            Profession = 1,
                            SpriteURL = "primaryHunter20.gif",
                            Weight = 5
                        },
                        new
                        {
                            Id = 11,
                            Atack = 0,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 20,
                            MagicAtack = 60,
                            Name = "Staff of the Woods",
                            Price = 150,
                            Profession = 2,
                            SpriteURL = "primaryMage20.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 12,
                            Atack = 70,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 20,
                            MagicAtack = 5,
                            Name = "Upgraded Broad sword",
                            Price = 150,
                            Profession = 3,
                            SpriteURL = "primaryPaladin20.gif",
                            Weight = 9
                        },
                        new
                        {
                            Id = 13,
                            Atack = 120,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 30,
                            MagicAtack = 0,
                            Name = "Sword Of Darkness",
                            Price = 350,
                            Profession = 0,
                            SpriteURL = "primaryWarrior30.gif",
                            Weight = 8
                        },
                        new
                        {
                            Id = 14,
                            Atack = 70,
                            CriticalChance = 15,
                            ItemType = 0,
                            Level = 30,
                            MagicAtack = 0,
                            Name = "Bow Of Darkness",
                            Price = 350,
                            Profession = 1,
                            SpriteURL = "primaryHunter30.gif",
                            Weight = 6
                        },
                        new
                        {
                            Id = 15,
                            Atack = 0,
                            CriticalChance = 5,
                            ItemType = 0,
                            Level = 30,
                            MagicAtack = 90,
                            Name = "Staff of the Order",
                            Price = 350,
                            Profession = 2,
                            SpriteURL = "primaryMage30.gif",
                            Weight = 7
                        },
                        new
                        {
                            Id = 16,
                            Atack = 110,
                            CriticalChance = 0,
                            ItemType = 0,
                            Level = 30,
                            MagicAtack = 40,
                            Name = "Sword of the Order",
                            Price = 350,
                            Profession = 3,
                            SpriteURL = "primaryPaladin30.gif",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Classes.Models.User.DBUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "93459483-f004-44d4-83a7-e9c2221fb547",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "fb370d81-2bdb-43a1-9acf-78ba49e0e118",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "eee71abd-77df-460b-bfca-881a02cac00f",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Classes.Models.Game.Hero.DBHero", b =>
                {
                    b.HasOne("Classes.Models.Game.Item.Armor.DBArmor", "DBArmor")
                        .WithMany("Heroes")
                        .HasForeignKey("ArmorId");

                    b.HasOne("Classes.Models.Game.Item.Boots.DBBoots", "DBBoots")
                        .WithMany("Heroes")
                        .HasForeignKey("BootsId");

                    b.HasOne("Classes.Models.Game.Item.Gloves.DBGloves", "DBGloves")
                        .WithMany("Heroes")
                        .HasForeignKey("GlovesId");

                    b.HasOne("Classes.Models.Game.Item.Helmet.DBHelmet", "DBHelmet")
                        .WithMany("Heroes")
                        .HasForeignKey("HelmetId");

                    b.HasOne("Classes.Models.Game.Item.Necklace.DBNecklace", "DBNecklace")
                        .WithMany("Heroes")
                        .HasForeignKey("NecklaceId");

                    b.HasOne("Classes.Models.Game.Item.Ring.DBRing", "DBRing")
                        .WithMany("Heroes")
                        .HasForeignKey("RingId");

                    b.HasOne("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", "DBSecondaryWeapon")
                        .WithMany("Heroes")
                        .HasForeignKey("SecondaryWeaponId");

                    b.HasOne("Classes.Models.User.DBUser", "DBUser")
                        .WithMany("Heroes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Classes.Models.Game.Item.Weapon.DBWeapon", "DBWeapon")
                        .WithMany("Heroes")
                        .HasForeignKey("WeaponId");

                    b.Navigation("DBArmor");

                    b.Navigation("DBBoots");

                    b.Navigation("DBGloves");

                    b.Navigation("DBHelmet");

                    b.Navigation("DBNecklace");

                    b.Navigation("DBRing");

                    b.Navigation("DBSecondaryWeapon");

                    b.Navigation("DBUser");

                    b.Navigation("DBWeapon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Classes.Models.User.DBUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Armor.DBArmor", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Boots.DBBoots", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Gloves.DBGloves", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Helmet.DBHelmet", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Necklace.DBNecklace", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Ring.DBRing", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.SecondaryWeapon.DBSecondaryWeapon", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.Game.Item.Weapon.DBWeapon", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Classes.Models.User.DBUser", b =>
                {
                    b.Navigation("Heroes");
                });
#pragma warning restore 612, 618
        }
    }
}
